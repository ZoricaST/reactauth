{"version":3,"sources":["components/Auth/AuthForm.module.css","components/Profile/UserProfile.module.css","store/auth-context.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","components/NotFound.js","App.js","index.js"],"names":["module","exports","AuthContext","React","createContext","token","isLoggedIn","login","logout","AuthContextProvider","props","initialToken","localStorage","getItem","useState","setToken","logoutHandler","removeItem","contextValue","expirationTime","setItem","setTimeout","console","log","Provider","value","children","MainNavigation","authCtx","useContext","Navbar","bg","variant","Container","fluid","Brand","as","Link","to","Nav","className","Item","Button","onClick","Layout","ProfileForm","history","useHistory","newPasswordInputRef","useRef","Row","Col","xs","md","Form","onSubmit","event","preventDefault","enteredNewPassword","current","fetch","method","body","JSON","stringify","idToken","password","returnSecureToken","headers","then","res","replace","Group","controlId","Label","Control","type","id","placeholder","minLength","ref","UserProfile","classes","profile","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","isLoading","setIsLoading","Card","url","enteredEmail","enteredPassword","email","ok","json","data","Error","catch","err","alert","message","required","Text","actions","toggle","prevState","AuthPage","StartingPageContent","HomePage","NotFound","App","path","exact","NoMatch","component","location","useLocation","pathname","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ffe00cd6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__MPw6W\",\"control\":\"AuthForm_control__2fVSU\",\"actions\":\"AuthForm_actions__1VNhY\",\"toggle\":\"AuthForm_toggle__21tnB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__gQOnH\"};","import React, { useState } from 'react';\n\nconst AuthContext = React.createContext({\ntoken: '',\nisLoggedIn: false,\nlogin: (token) => {},\nlogout: () => {},\n});\n\n//const calculateRemainingTime = (expirationTime)=>{\n//const currentTime = new Date().getTime();\n//const adjExpirationTime = new Date(expirationTime).getTime();\n\n//const remainingDuration = adjExpirationTime - currentTime;\n//return remainingDuration;\n//}\n\nexport const AuthContextProvider = (props) => {\nconst initialToken = localStorage.getItem('token')\nconst [token, setToken] = useState(initialToken);\n\nconst userIsLoggedIn = !!token;\n\nconst logoutHandler = () => {\nsetToken(null);\nlocalStorage.removeItem('token', token);\n};\n\nconst loginHandler = (token, expirationTime) => {\nsetToken(token);\nlocalStorage.setItem('token', token);\n//const remainingTime = calculateRemainingTime(expirationTime);\nsetTimeout(logoutHandler, 3600000);\nconsole.log(expirationTime)\n};\n\nconst contextValue = {\ntoken: token,\nisLoggedIn: userIsLoggedIn,\nlogin: loginHandler,\nlogout: logoutHandler,\n};\n\nreturn (\n<AuthContext.Provider value={contextValue}>\n{props.children}\n</AuthContext.Provider>\n);\n};\n\nexport default AuthContext;","import { useContext } from 'react';\nimport { Navbar, Button,Container, Nav } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n\nimport AuthContext from '../../store/auth-context';\n\nconst MainNavigation = () => {\n  const authCtx = useContext(AuthContext);\n\n  const isLoggedIn = authCtx.isLoggedIn;\n\n  const logoutHandler = () => {\n    authCtx.logout();\n    // optional: redirect the user\n  };\n\n  return (\n \n  \n      <Navbar bg=\"dark\" variant=\"dark\">\n         <Container fluid>\n         <Navbar.Brand as={Link}  to=\"/\">React Auth</Navbar.Brand>\n       \n  \n        \n\n  \n\n    <Nav className=\"justify-content-end\">\n          {!isLoggedIn && (\n            <Nav.Item >\n               <Nav.Link as={Link}  to=\"/auth\">Login</Nav.Link>\n            \n              </Nav.Item>\n          )}\n\n          {isLoggedIn && (\n             <Nav.Item>\n             <Nav.Link as={Link}  to=\"/profile\">Profile</Nav.Link>\n           </Nav.Item>\n           \n          )}\n\n          {isLoggedIn && (\n           \n               <Button variant=\"outline-info\"  onClick={logoutHandler}>Logout</Button>\n           \n           \n          )}\n          \n        </Nav>\n        \n      \n        </Container>\n        </Navbar>\n       \n\n    \n\n  );\n};\n\nexport default MainNavigation;","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport AuthContext from '../../store/auth-context';\n//import classes from './ProfileForm.module.css';\nimport { Form, Button, Container,Row,Col} from 'react-bootstrap';\n\nconst ProfileForm = () => {\n  const history = useHistory();\nconst newPasswordInputRef = useRef();\nconst authCtx = useContext(AuthContext);\n\nconst submitHandler = (event) => {\nevent.preventDefault();\n\nconst enteredNewPassword = newPasswordInputRef.current.value;\n\n// add validation\n\nfetch('https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyBOY-Y4RykiUKME-IVBLrDGGcel9VUpch8', {\nmethod: 'POST',\nbody: JSON.stringify({\nidToken: authCtx.token,\npassword: enteredNewPassword,\nreturnSecureToken: false\n}),\nheaders: {\n'Content-Type': 'application/json'\n}\n}).then(res => {\n// assumption: Always succeeds!\nhistory.replace('/');\n});\n};\n\nreturn (\n  \n  <Container className=' text-info  border-dark '>\n   <Row className=\"justify-content-center w-1\">\n    \n    <Col xs={8} md={4} className='border rounded' >\n\n      <Form  onSubmit={submitHandler}>\n\n        <Form.Group className=\"mb-3 font-weight-bold\" controlId=\"formBasicPassword\">\n            <Form.Label className='text-dark '>New Password</Form.Label>\n            <Form.Control type=\"password\" id='new-password'placeholder=\"Password\" minLength=\"7\" ref={newPasswordInputRef}  />  \n        </Form.Group>\n      \n        <Button className='m-2 bg-info border border-dark' variant=\"primary\" type=\"submit\">Submit\n        </Button>\n\n      </Form>\n\n    </Col>\n    \n   </Row>\n  \n  </Container>\n\n);\n};\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useState, useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\n\nimport AuthContext from '../../store/auth-context';\nimport classes from './AuthForm.module.css';\nimport { Form, Button, Card, Container, Row, Col} from 'react-bootstrap';\n\nconst AuthForm = () => {\nconst history = useHistory();\nconst emailInputRef = useRef();\nconst passwordInputRef = useRef();\n\nconst authCtx = useContext(AuthContext);\n\nconst [isLogin, setIsLogin] = useState(true);\nconst [isLoading, setIsLoading] = useState(false);\n\nconst switchAuthModeHandler = () => {\nsetIsLogin((prevState) => !prevState);\n};\n\nconst submitHandler = (event) => {\nevent.preventDefault();\n\nconst enteredEmail = emailInputRef.current.value;\nconst enteredPassword = passwordInputRef.current.value;\n\n// optional: Add validation\n\nsetIsLoading(true);\nlet url;\nif (isLogin) {\nurl =\n'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBOY-Y4RykiUKME-IVBLrDGGcel9VUpch8';\n} else {\nurl =\n'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBOY-Y4RykiUKME-IVBLrDGGcel9VUpch8';\n}\nfetch(url, {\nmethod: 'POST',\nbody: JSON.stringify({\nemail: enteredEmail,\npassword: enteredPassword,\nreturnSecureToken: true,\n}),\nheaders: {\n'Content-Type': 'application/json',\n},\n})\n.then((res) => {\nsetIsLoading(false);\nif (res.ok) {\nreturn res.json();\n} else {\nreturn res.json().then((data) => {\nlet errorMessage = 'Authentication failed!';\n// if (data && data.error && data.error.message) {\n// errorMessage = data.error.message;\n// }\n\nthrow new Error(errorMessage);\n});\n}\n})\n.then((data) => {\nauthCtx.login(data.idToken);\nhistory.replace('/');\n})\n.catch((err) => {\nalert(err.message);\n});\n};\n\nreturn (\n  \n  <Container className=' text-info mt-2 border-dark my-auto'>\n    <Card>\n   <Row className=\"justify-content-center  w-1\">\n    \n    <Col xs={8} md={4} className='border rounded' >\n    <h1 className='text-center'>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <Form  onSubmit={submitHandler}>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"Enter email\"id='email' required ref={emailInputRef} />\n        <Form.Text className=\"text-muted\">\n          We'll never share your email with anyone else.\n        </Form.Text>\n      </Form.Group>\n\n    \n\n\n      <Form.Group className=\"mb-3 font-weight-bold\" controlId=\"formBasicPassword\">\n            <Form.Label >Your Password</Form.Label>\n            <Form.Control \n            type=\"password\" \n            placeholder=\"Password\" \n            minLength=\"7\" \n            id='password'\n            required\n            ref={passwordInputRef} />  \n        </Form.Group>\n\n<div className={classes.actions}>\n{!isLoading && (\n<button>{isLogin ? 'Login' : 'Create Account'}</button>\n)}\n{isLoading && <p>Sending request...</p>}\n\n<Button\ntype='button'\nclassName={classes.toggle}\nonClick={switchAuthModeHandler}\n>\n{isLogin ? 'Create new account' : 'Login with existing account'}\n</Button>\n</div>\n\n      </Form>\n\n    </Col>\n    \n   </Row>\n  </Card>\n  </Container>\n\n\n);\n};\n\nexport default AuthForm;","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","//import classes from './StartingPageContent.module.css';\nimport { Container, Row, Col} from 'react-bootstrap';\n\n\nconst StartingPageContent = () => {\n  return (\n   \n    <Container>\n      <Row>\n        <Col> <h1>Welcome!</h1></Col>\n      </Row>\n    </Container>\n   \n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFound = () => (\n  <div>\n    <h1>404 - Not Found!</h1>\n    <Link to=\"/\">Go Home</Link>\n  </div>\n);\n\nexport default NotFound;","import { useContext } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport {\n  //BrowserRouter as Router,\n  Route,\n // Link,\n  Switch,\n  Redirect,\n  useLocation\n} from \"react-router-dom\";\n\n\nimport Layout from './components/Layout/Layout';\nimport UserProfile from './components/Profile/UserProfile';\nimport AuthPage from './pages/AuthPage';\nimport HomePage from './pages/HomePage';\nimport AuthContext from './store/auth-context';\nimport NotFound from './components/NotFound';\n\nfunction App() {\n  const authCtx = useContext(AuthContext);\n\n  return (\n    <Layout>\n      <Switch>\n        <Route path='/' exact>\n          <HomePage />\n        </Route>\n      \n        {!authCtx.isLoggedIn && (\n          <Route path='/auth'>\n            <AuthPage />\n          </Route>\n        )}\n        <Route path='/profile'>\n          {authCtx.isLoggedIn && <UserProfile />}\n          {!authCtx.isLoggedIn && <Redirect to='/auth' />}\n        </Route>\n        <Route path=\"*\">\n            <NoMatch />\n          </Route>\n        <Route component={NotFound} />\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n\nfunction NoMatch() {\n  let location = useLocation();\n\n  return (\n    <div>\n      <h3>\n        No match for <code>{location.pathname}</code>\n      </h3>\n    </div>\n  );\n}\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport { AuthContextProvider } from './store/auth-context';\n\nReactDOM.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}