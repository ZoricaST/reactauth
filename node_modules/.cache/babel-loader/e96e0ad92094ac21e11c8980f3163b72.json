{"ast":null,"code":"var _jsxFileName = \"/home/zorica/\\u0420\\u0430\\u0434\\u043D\\u0430 \\u043F\\u043E\\u0432\\u0440\\u0448\\u0438\\u043D\\u0430/react/React - The Complete Guide (incl Hooks, React Router, Redux)/[TutsNode.com] - React - The Complete Guide (incl Hooks, React Router, Redux)/22 Adding Authentication To React Apps/01-starting-project/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\n\nconst calculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingDuration = adjExpirationTime - currentTime;\n  return remainingDuration;\n};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const initialToken = localStorage.getItem('token');\n  const [token, setToken] = useState(initialToken);\n  const userIsLoggedIn = !!token;\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem('token', token);\n  };\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem('token', token);\n    const remainingTime = calculateRemainingTime(expirationTime);\n    setTimeout(logoutHandler, 3000);\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 1\n  }, this);\n};\n\n_s(AuthContextProvider, \"s3jk56xWU5XKZXYqw5SfcwTuysU=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/home/zorica/Радна површина/react/React - The Complete Guide (incl Hooks, React Router, Redux)/[TutsNode.com] - React - The Complete Guide (incl Hooks, React Router, Redux)/22 Adding Authentication To React Apps/01-starting-project/src/store/auth-context.js"],"names":["React","useState","AuthContext","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingDuration","AuthContextProvider","props","initialToken","localStorage","getItem","setToken","userIsLoggedIn","logoutHandler","removeItem","loginHandler","setItem","remainingTime","setTimeout","contextValue","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACxCC,EAAAA,KAAK,EAAE,EADiC;AAExCC,EAAAA,UAAU,EAAE,KAF4B;AAGxCC,EAAAA,KAAK,EAAGF,KAAD,IAAW,CAAE,CAHoB;AAIxCG,EAAAA,MAAM,EAAE,MAAM,CAAE;AAJwB,CAApB,CAApB;;AAOA,MAAMC,sBAAsB,GAAIC,cAAD,IAAkB;AACjD,QAAMC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAApB;AACA,QAAMC,iBAAiB,GAAG,IAAIF,IAAJ,CAASF,cAAT,EAAyBG,OAAzB,EAA1B;AAEA,QAAME,iBAAiB,GAAGD,iBAAiB,GAAGH,WAA9C;AACA,SAAOI,iBAAP;AACC,CAND;;AAQA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC9C,QAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAArB;AACA,QAAM,CAACf,KAAD,EAAQgB,QAAR,IAAoBnB,QAAQ,CAACgB,YAAD,CAAlC;AAEA,QAAMI,cAAc,GAAG,CAAC,CAACjB,KAAzB;;AAEA,QAAMkB,aAAa,GAAG,MAAM;AAC5BF,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,IAAAA,YAAY,CAACK,UAAb,CAAwB,OAAxB,EAAiCnB,KAAjC;AACC,GAHD;;AAKA,QAAMoB,YAAY,GAAG,CAACpB,KAAD,EAAQK,cAAR,KAA2B;AAChDW,IAAAA,QAAQ,CAAChB,KAAD,CAAR;AACAc,IAAAA,YAAY,CAACO,OAAb,CAAqB,OAArB,EAA8BrB,KAA9B;AACA,UAAMsB,aAAa,GAAGlB,sBAAsB,CAACC,cAAD,CAA5C;AACAkB,IAAAA,UAAU,CAACL,aAAD,EAAgB,IAAhB,CAAV;AACC,GALD;;AAOA,QAAMM,YAAY,GAAG;AACrBxB,IAAAA,KAAK,EAAEA,KADc;AAErBC,IAAAA,UAAU,EAAEgB,cAFS;AAGrBf,IAAAA,KAAK,EAAEkB,YAHc;AAIrBjB,IAAAA,MAAM,EAAEe;AAJa,GAArB;AAOA,sBACA,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEM,YAA7B;AAAA,cACCZ,KAAK,CAACa;AADP;AAAA;AAAA;AAAA;AAAA,UADA;AAKC,CA9BM;;GAAMd,mB;;KAAAA,mB;AAgCb,eAAeb,WAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst AuthContext = React.createContext({\ntoken: '',\nisLoggedIn: false,\nlogin: (token) => {},\nlogout: () => {},\n});\n\nconst calculateRemainingTime = (expirationTime)=>{\nconst currentTime = new Date().getTime();\nconst adjExpirationTime = new Date(expirationTime).getTime();\n\nconst remainingDuration = adjExpirationTime - currentTime;\nreturn remainingDuration;\n}\n\nexport const AuthContextProvider = (props) => {\nconst initialToken = localStorage.getItem('token')\nconst [token, setToken] = useState(initialToken);\n\nconst userIsLoggedIn = !!token;\n\nconst logoutHandler = () => {\nsetToken(null);\nlocalStorage.removeItem('token', token);\n};\n\nconst loginHandler = (token, expirationTime) => {\nsetToken(token);\nlocalStorage.setItem('token', token);\nconst remainingTime = calculateRemainingTime(expirationTime);\nsetTimeout(logoutHandler, 3000);\n};\n\nconst contextValue = {\ntoken: token,\nisLoggedIn: userIsLoggedIn,\nlogin: loginHandler,\nlogout: logoutHandler,\n};\n\nreturn (\n<AuthContext.Provider value={contextValue}>\n{props.children}\n</AuthContext.Provider>\n);\n};\n\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}