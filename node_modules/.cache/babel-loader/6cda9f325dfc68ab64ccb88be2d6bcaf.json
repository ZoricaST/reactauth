{"ast":null,"code":"var _jsxFileName = \"/home/zorica/\\u0420\\u0430\\u0434\\u043D\\u0430 \\u043F\\u043E\\u0432\\u0440\\u0448\\u0438\\u043D\\u0430/react/vezbanje/auth/src/components/Auth/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nimport AuthContext from '../../store/auth-context';\nimport classes from './AuthForm.module.css';\nimport { Form, Button, Card, Container, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const authCtx = useContext(AuthContext);\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value; // optional: Add validation\n\n    setIsLoading(true);\n    let url;\n\n    if (isLogin) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBOY-Y4RykiUKME-IVBLrDGGcel9VUpch8';\n    } else {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBOY-Y4RykiUKME-IVBLrDGGcel9VUpch8';\n    }\n\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      setIsLoading(false);\n\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(data => {\n          let errorMessage = 'Authentication failed!'; // if (data && data.error && data.error.message) {\n          // errorMessage = data.error.message;\n          // }\n\n          throw new Error(errorMessage);\n        });\n      }\n    }).then(data => {\n      authCtx.login(data.idToken);\n      history.replace('/');\n    }).catch(err => {\n      alert(err.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \" text-info mb-3 border-dark \",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-center  w-1\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xs: 8,\n            md: 4,\n            className: \"border rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: isLogin ? 'Login' : 'Sign Up'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: submitHandler,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                controlId: \"formBasicEmail\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Email address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"email\",\n                  placeholder: \"Enter email\",\n                  id: \"email\",\n                  required: true,\n                  ref: emailInputRef\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                  className: \"text-muted\",\n                  children: \"We'll never share your email with anyone else.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 9\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.control,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email\",\n                  children: \"Your Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 1\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  id: \"email\",\n                  required: true,\n                  ref: emailInputRef\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 1\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.control,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password\",\n                  children: \"Your Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 1\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  id: \"password\",\n                  required: true,\n                  ref: passwordInputRef\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 1\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.actions,\n                children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n                  children: isLogin ? 'Login' : 'Create Account'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 1\n                }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Sending request...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  className: classes.toggle,\n                  onClick: switchAuthModeHandler,\n                  children: isLogin ? 'Create new account' : 'Login with existing account'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 1\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 1\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 4\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n};\n\n_s(AuthForm, \"V9mgLlHICzGobfscsxv8TBwG27I=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["/home/zorica/Радна површина/react/vezbanje/auth/src/components/Auth/AuthForm.js"],"names":["useState","useRef","useContext","useHistory","AuthContext","classes","Form","Button","Card","Container","Row","Col","AuthForm","history","emailInputRef","passwordInputRef","authCtx","isLogin","setIsLogin","isLoading","setIsLoading","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","url","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","Error","login","idToken","replace","catch","err","alert","message","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\n\nimport AuthContext from '../../store/auth-context';\nimport classes from './AuthForm.module.css';\nimport { Form, Button, Card, Container, Row, Col} from 'react-bootstrap';\n\nconst AuthForm = () => {\nconst history = useHistory();\nconst emailInputRef = useRef();\nconst passwordInputRef = useRef();\n\nconst authCtx = useContext(AuthContext);\n\nconst [isLogin, setIsLogin] = useState(true);\nconst [isLoading, setIsLoading] = useState(false);\n\nconst switchAuthModeHandler = () => {\nsetIsLogin((prevState) => !prevState);\n};\n\nconst submitHandler = (event) => {\nevent.preventDefault();\n\nconst enteredEmail = emailInputRef.current.value;\nconst enteredPassword = passwordInputRef.current.value;\n\n// optional: Add validation\n\nsetIsLoading(true);\nlet url;\nif (isLogin) {\nurl =\n'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBOY-Y4RykiUKME-IVBLrDGGcel9VUpch8';\n} else {\nurl =\n'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBOY-Y4RykiUKME-IVBLrDGGcel9VUpch8';\n}\nfetch(url, {\nmethod: 'POST',\nbody: JSON.stringify({\nemail: enteredEmail,\npassword: enteredPassword,\nreturnSecureToken: true,\n}),\nheaders: {\n'Content-Type': 'application/json',\n},\n})\n.then((res) => {\nsetIsLoading(false);\nif (res.ok) {\nreturn res.json();\n} else {\nreturn res.json().then((data) => {\nlet errorMessage = 'Authentication failed!';\n// if (data && data.error && data.error.message) {\n// errorMessage = data.error.message;\n// }\n\nthrow new Error(errorMessage);\n});\n}\n})\n.then((data) => {\nauthCtx.login(data.idToken);\nhistory.replace('/');\n})\n.catch((err) => {\nalert(err.message);\n});\n};\n\nreturn (\n  <>\n  <Container className=' text-info mb-3 border-dark '>\n    <Card>\n   <Row className=\"justify-content-center  w-1\">\n    \n    <Col xs={8} md={4} className='border rounded' >\n    <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <Form  onSubmit={submitHandler}>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"Enter email\"id='email' required ref={emailInputRef} />\n        <Form.Text className=\"text-muted\">\n          We'll never share your email with anyone else.\n        </Form.Text>\n      </Form.Group>\n\n      <div className={classes.control}>\n<label htmlFor='email'>Your Email</label>\n<input type='email' id='email' required ref={emailInputRef} />\n</div>\n<div className={classes.control}>\n<label htmlFor='password'>Your Password</label>\n<input\ntype='password'\nid='password'\nrequired\nref={passwordInputRef}\n/>\n</div>\n\n<div className={classes.actions}>\n{!isLoading && (\n<button>{isLogin ? 'Login' : 'Create Account'}</button>\n)}\n{isLoading && <p>Sending request...</p>}\n<Button\ntype='button'\nclassName={classes.toggle}\nonClick={switchAuthModeHandler}\n>\n{isLogin ? 'Create new account' : 'Login with existing account'}\n</Button>\n</div>\n\n      </Form>\n\n    </Col>\n    \n   </Row>\n  </Card>\n  </Container>\n\n</>\n);\n};\n\nexport default AuthForm;"]},"metadata":{},"sourceType":"module"}