{"ast":null,"code":"var _jsxFileName = \"/home/zorica/\\u0420\\u0430\\u0434\\u043D\\u0430 \\u043F\\u043E\\u0432\\u0440\\u0448\\u0438\\u043D\\u0430/react/vezbanje/auth/src/components/Auth/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nimport AuthContext from '../../store/auth-context';\nimport classes from './AuthForm.module.css';\nimport { Form, Button, Container } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const authCtx = useContext(AuthContext);\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value; // optional: Add validation\n\n    setIsLoading(true);\n    let url;\n\n    if (isLogin) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBOY-Y4RykiUKME-IVBLrDGGcel9VUpch8';\n    } else {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBOY-Y4RykiUKME-IVBLrDGGcel9VUpch8';\n    }\n\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      setIsLoading(false);\n\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(data => {\n          let errorMessage = 'Authentication failed!'; // if (data && data.error && data.error.message) {\n          // errorMessage = data.error.message;\n          // }\n\n          throw new Error(errorMessage);\n        });\n      }\n    }).then(data => {\n      authCtx.login(data.idToken);\n      history.replace('/');\n    }).catch(err => {\n      alert(err.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: \"lg\",\n    className: \"bg-light border\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      className: \"bg-light border\",\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      className: \"bg-light border\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicEmail\",\n        className: \"bg-light border\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef,\n          placeholder: \"Enter email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"We'll never share your email with anyone else.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          id: \"password\",\n          placeholder: \"Password\",\n          required: true,\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          id: \"passwordHelpBlock\",\n          muted: true,\n          children: \"Your password must be 8-20 characters long, contain letters and numbers, and must not contain spaces, special characters, or emoji.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 5\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sending request...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"V9mgLlHICzGobfscsxv8TBwG27I=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["/home/zorica/Радна површина/react/vezbanje/auth/src/components/Auth/AuthForm.js"],"names":["useState","useRef","useContext","useHistory","AuthContext","classes","Form","Button","Container","AuthForm","history","emailInputRef","passwordInputRef","authCtx","isLogin","setIsLogin","isLoading","setIsLoading","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","url","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","Error","login","idToken","replace","catch","err","alert","message","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\n\nimport AuthContext from '../../store/auth-context';\nimport classes from './AuthForm.module.css';\nimport { Form, Button, Container} from 'react-bootstrap';\n\nconst AuthForm = () => {\nconst history = useHistory();\nconst emailInputRef = useRef();\nconst passwordInputRef = useRef();\n\nconst authCtx = useContext(AuthContext);\n\nconst [isLogin, setIsLogin] = useState(true);\nconst [isLoading, setIsLoading] = useState(false);\n\nconst switchAuthModeHandler = () => {\nsetIsLogin((prevState) => !prevState);\n};\n\nconst submitHandler = (event) => {\nevent.preventDefault();\n\nconst enteredEmail = emailInputRef.current.value;\nconst enteredPassword = passwordInputRef.current.value;\n\n// optional: Add validation\n\nsetIsLoading(true);\nlet url;\nif (isLogin) {\nurl =\n'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBOY-Y4RykiUKME-IVBLrDGGcel9VUpch8';\n} else {\nurl =\n'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBOY-Y4RykiUKME-IVBLrDGGcel9VUpch8';\n}\nfetch(url, {\nmethod: 'POST',\nbody: JSON.stringify({\nemail: enteredEmail,\npassword: enteredPassword,\nreturnSecureToken: true,\n}),\nheaders: {\n'Content-Type': 'application/json',\n},\n})\n.then((res) => {\nsetIsLoading(false);\nif (res.ok) {\nreturn res.json();\n} else {\nreturn res.json().then((data) => {\nlet errorMessage = 'Authentication failed!';\n// if (data && data.error && data.error.message) {\n// errorMessage = data.error.message;\n// }\n\nthrow new Error(errorMessage);\n});\n}\n})\n.then((data) => {\nauthCtx.login(data.idToken);\nhistory.replace('/');\n})\n.catch((err) => {\nalert(err.message);\n});\n};\n\nreturn (\n    <Container fluid=\"lg\" className=\"bg-light border\">\n  \n\n<Form.Label className=\"bg-light border\" >\n\n{isLogin ? 'Login' : 'Sign Up'}</Form.Label>\n\n<Form onSubmit={submitHandler} className=\"bg-light border\">\n\n<Form.Group className=\"mb-3\" controlId=\"formBasicEmail\" className=\"bg-light border\">\n\n  <Form.Label htmlFor='email'>Your Email</Form.Label>\n  <Form.Control type=\"email\" id='email' required ref={emailInputRef} placeholder=\"Enter email\" />\n   \n  <Form.Text className=\"text-muted\">\n      We'll never share your email with anyone else.\n    </Form.Text>\n\n</Form.Group>\n\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n  <Form.Label>Password</Form.Label>\n  <Form.Control type=\"password\" id='password' placeholder=\"Password\" required\n    ref={passwordInputRef}\n    />\n    <Form.Text id=\"passwordHelpBlock\" muted>\n    Your password must be 8-20 characters long, contain letters and numbers, and\n    must not contain spaces, special characters, or emoji.\n  </Form.Text>  \n  </Form.Group>\n\n  <div className={classes.actions}>\n  {!isLoading && (\n    <Button variant=\"primary\">{isLogin ? 'Login' : 'Create Account'}</Button>\n    )}\n    {isLoading && <p>Sending request...</p>}\n        \n        <Button variant=\"primary\"\n        type='button'\n        className={classes.toggle}\n        onClick={switchAuthModeHandler}\n        >\n        {isLogin ? 'Create new account' : 'Login with existing account'}\n        </Button>\n  </div>\n</Form>\n\n</Container>\n);\n};\n\nexport default AuthForm;"]},"metadata":{},"sourceType":"module"}