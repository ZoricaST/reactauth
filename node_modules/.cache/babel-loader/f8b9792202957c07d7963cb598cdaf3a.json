{"ast":null,"code":"import _slicedToArray from\"/home/zorica/\\u0420\\u0430\\u0434\\u043D\\u0430 \\u043F\\u043E\\u0432\\u0440\\u0448\\u0438\\u043D\\u0430/react/vezbanje/auth/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useRef,useContext}from'react';import{useHistory}from'react-router-dom/cjs/react-router-dom.min';import AuthContext from'../../store/auth-context';import classes from'./AuthForm.module.css';import{Form,Button,Card,Container,Row,Col}from'react-bootstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AuthForm=function AuthForm(){var history=useHistory();var emailInputRef=useRef();var passwordInputRef=useRef();var authCtx=useContext(AuthContext);var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isLogin=_useState2[0],setIsLogin=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var switchAuthModeHandler=function switchAuthModeHandler(){setIsLogin(function(prevState){return!prevState;});};var submitHandler=function submitHandler(event){event.preventDefault();var enteredEmail=emailInputRef.current.value;var enteredPassword=passwordInputRef.current.value;// optional: Add validation\nsetIsLoading(true);var url;if(isLogin){url='https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBOY-Y4RykiUKME-IVBLrDGGcel9VUpch8';}else{url='https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBOY-Y4RykiUKME-IVBLrDGGcel9VUpch8';}fetch(url,{method:'POST',body:JSON.stringify({email:enteredEmail,password:enteredPassword,returnSecureToken:true}),headers:{'Content-Type':'application/json'}}).then(function(res){setIsLoading(false);if(res.ok){return res.json();}else{return res.json().then(function(data){var errorMessage='Authentication failed!';// if (data && data.error && data.error.message) {\n// errorMessage = data.error.message;\n// }\nthrow new Error(errorMessage);});}}).then(function(data){authCtx.login(data.idToken);history.replace('/');}).catch(function(err){alert(err.message);});};return/*#__PURE__*/_jsx(Container,{className:\" text-info mt-2 border-dark my-auto\",children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(Row,{className:\"justify-content-center  w-1\",children:/*#__PURE__*/_jsxs(Col,{xs:8,md:4,className:\"border rounded\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-center\",children:isLogin?'Login':'Sign Up'}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"formBasicEmail\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",placeholder:\"Enter email\",id:\"email\",required:true,ref:emailInputRef}),/*#__PURE__*/_jsx(Form.Text,{className:\"text-muted\",children:\"We'll never share your email with anyone else.\"})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3 font-weight-bold\",controlId:\"formBasicPassword\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Your Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",placeholder:\"Password\",minLength:\"7\",id:\"password\",required:true,ref:passwordInputRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.actions,children:[!isLoading&&/*#__PURE__*/_jsx(\"button\",{children:isLogin?'Login':'Create Account'}),isLoading&&/*#__PURE__*/_jsx(\"p\",{children:\"Sending request...\"}),/*#__PURE__*/_jsx(Button,{type:\"button\",className:classes.toggle,onClick:switchAuthModeHandler,children:isLogin?'Create new account':'Login with existing account'})]})]})]})})})});};export default AuthForm;","map":{"version":3,"sources":["/home/zorica/Радна површина/react/vezbanje/auth/src/components/Auth/AuthForm.js"],"names":["useState","useRef","useContext","useHistory","AuthContext","classes","Form","Button","Card","Container","Row","Col","AuthForm","history","emailInputRef","passwordInputRef","authCtx","isLogin","setIsLogin","isLoading","setIsLoading","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","url","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","Error","login","idToken","replace","catch","err","alert","message","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\n\nimport AuthContext from '../../store/auth-context';\nimport classes from './AuthForm.module.css';\nimport { Form, Button, Card, Container, Row, Col} from 'react-bootstrap';\n\nconst AuthForm = () => {\nconst history = useHistory();\nconst emailInputRef = useRef();\nconst passwordInputRef = useRef();\n\nconst authCtx = useContext(AuthContext);\n\nconst [isLogin, setIsLogin] = useState(true);\nconst [isLoading, setIsLoading] = useState(false);\n\nconst switchAuthModeHandler = () => {\nsetIsLogin((prevState) => !prevState);\n};\n\nconst submitHandler = (event) => {\nevent.preventDefault();\n\nconst enteredEmail = emailInputRef.current.value;\nconst enteredPassword = passwordInputRef.current.value;\n\n// optional: Add validation\n\nsetIsLoading(true);\nlet url;\nif (isLogin) {\nurl =\n'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBOY-Y4RykiUKME-IVBLrDGGcel9VUpch8';\n} else {\nurl =\n'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBOY-Y4RykiUKME-IVBLrDGGcel9VUpch8';\n}\nfetch(url, {\nmethod: 'POST',\nbody: JSON.stringify({\nemail: enteredEmail,\npassword: enteredPassword,\nreturnSecureToken: true,\n}),\nheaders: {\n'Content-Type': 'application/json',\n},\n})\n.then((res) => {\nsetIsLoading(false);\nif (res.ok) {\nreturn res.json();\n} else {\nreturn res.json().then((data) => {\nlet errorMessage = 'Authentication failed!';\n// if (data && data.error && data.error.message) {\n// errorMessage = data.error.message;\n// }\n\nthrow new Error(errorMessage);\n});\n}\n})\n.then((data) => {\nauthCtx.login(data.idToken);\nhistory.replace('/');\n})\n.catch((err) => {\nalert(err.message);\n});\n};\n\nreturn (\n  \n  <Container className=' text-info mt-2 border-dark my-auto'>\n    <Card>\n   <Row className=\"justify-content-center  w-1\">\n    \n    <Col xs={8} md={4} className='border rounded' >\n    <h1 className='text-center'>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <Form  onSubmit={submitHandler}>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"Enter email\"id='email' required ref={emailInputRef} />\n        <Form.Text className=\"text-muted\">\n          We'll never share your email with anyone else.\n        </Form.Text>\n      </Form.Group>\n\n    \n\n\n      <Form.Group className=\"mb-3 font-weight-bold\" controlId=\"formBasicPassword\">\n            <Form.Label >Your Password</Form.Label>\n            <Form.Control \n            type=\"password\" \n            placeholder=\"Password\" \n            minLength=\"7\" \n            id='password'\n            required\n            ref={passwordInputRef} />  \n        </Form.Group>\n\n<div className={classes.actions}>\n{!isLoading && (\n<button>{isLogin ? 'Login' : 'Create Account'}</button>\n)}\n{isLoading && <p>Sending request...</p>}\n\n<Button\ntype='button'\nclassName={classes.toggle}\nonClick={switchAuthModeHandler}\n>\n{isLogin ? 'Create new account' : 'Login with existing account'}\n</Button>\n</div>\n\n      </Form>\n\n    </Col>\n    \n   </Row>\n  </Card>\n  </Container>\n\n\n);\n};\n\nexport default AuthForm;"]},"metadata":{},"sourceType":"module"}