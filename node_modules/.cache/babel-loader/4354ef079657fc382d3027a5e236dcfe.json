{"ast":null,"code":"var _jsxFileName = \"/home/zorica/\\u0420\\u0430\\u0434\\u043D\\u0430 \\u043F\\u043E\\u0432\\u0440\\u0448\\u0438\\u043D\\u0430/react/React - The Complete Guide (incl Hooks, React Router, Redux)/[TutsNode.com] - React - The Complete Guide (incl Hooks, React Router, Redux)/22 Adding Authentication To React Apps/01-starting-project/src/components/Auth/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react';\nimport classes from './AuthForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const [isLogin, setIsLogin] = useState(true);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value; // optional: Add validation\n\n    if (isLogin) {} else {\n      fetch('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBOY-Y4RykiUKME-IVBLrDGGcel9VUpch8', {\n        method: 'POST',\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        if (res.ok) {// ...\n        } else {\n          return res.json().then(data => {\n            // show an error modal\n            console.log(data);\n          });\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 1\n  }, this);\n};\n\n_s(AuthForm, \"d5MFzbQ69dYgb5LfYbTwTxIKLCk=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["/home/zorica/Радна површина/react/React - The Complete Guide (incl Hooks, React Router, Redux)/[TutsNode.com] - React - The Complete Guide (incl Hooks, React Router, Redux)/22 Adding Authentication To React Apps/01-starting-project/src/components/Auth/AuthForm.js"],"names":["useState","useRef","classes","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","console","log","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef } from 'react';\n\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\nconst emailInputRef = useRef();\nconst passwordInputRef = useRef();\n\nconst [isLogin, setIsLogin] = useState(true);\n\nconst switchAuthModeHandler = () => {\nsetIsLogin((prevState) => !prevState);\n};\n\nconst submitHandler = (event) => {\nevent.preventDefault();\n\nconst enteredEmail = emailInputRef.current.value;\nconst enteredPassword = passwordInputRef.current.value;\n\n// optional: Add validation\n\nif (isLogin) {\n} else {\nfetch(\n'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBOY-Y4RykiUKME-IVBLrDGGcel9VUpch8',\n{\nmethod: 'POST',\nbody: JSON.stringify({\nemail: enteredEmail,\npassword: enteredPassword,\nreturnSecureToken: true,\n}),\nheaders: {\n'Content-Type': 'application/json',\n},\n}\n).then((res) => {\nif (res.ok) {\n// ...\n} else {\nreturn res.json().then((data) => {\n// show an error modal\nconsole.log(data);\n});\n}\n});\n}\n};\n\nreturn (\n<section className={classes.auth}>\n<h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n<form onSubmit={submitHandler}>\n<div className={classes.control}>\n<label htmlFor='email'>Your Email</label>\n<input type='email' id='email' required ref={emailInputRef} />\n</div>\n<div className={classes.control}>\n<label htmlFor='password'>Your Password</label>\n<input\ntype='password'\nid='password'\nrequired\nref={passwordInputRef}\n/>\n</div>\n<div className={classes.actions}>\n<button>{isLogin ? 'Login' : 'Create Account'}</button>\n<button\ntype='button'\nclassName={classes.toggle}\nonClick={switchAuthModeHandler}\n>\n{isLogin ? 'Create new account' : 'Login with existing account'}\n</button>\n</div>\n</form>\n</section>\n);\n};\n\nexport default AuthForm;"]},"metadata":{},"sourceType":"module"}