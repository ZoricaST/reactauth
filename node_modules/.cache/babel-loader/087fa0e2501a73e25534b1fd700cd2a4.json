{"ast":null,"code":"var _jsxFileName = \"/home/zorica/\\u0420\\u0430\\u0434\\u043D\\u0430 \\u043F\\u043E\\u0432\\u0440\\u0448\\u0438\\u043D\\u0430/react/React - The Complete Guide (incl Hooks, React Router, Redux)/[TutsNode.com] - React - The Complete Guide (incl Hooks, React Router, Redux)/22 Adding Authentication To React Apps/01-starting-project/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\n\nconst calculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingDuration = adjExpirationTime - currentTime;\n  return remai;\n};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const initialToken = localStorage.getItem('token');\n  const [token, setToken] = useState(initialToken);\n  const userIsLoggedIn = !!token;\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem('token', token);\n  };\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem('token', token);\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"s3jk56xWU5XKZXYqw5SfcwTuysU=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/home/zorica/Радна површина/react/React - The Complete Guide (incl Hooks, React Router, Redux)/[TutsNode.com] - React - The Complete Guide (incl Hooks, React Router, Redux)/22 Adding Authentication To React Apps/01-starting-project/src/store/auth-context.js"],"names":["React","useState","AuthContext","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingDuration","remai","AuthContextProvider","props","initialToken","localStorage","getItem","setToken","userIsLoggedIn","loginHandler","setItem","logoutHandler","removeItem","contextValue","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACtCC,EAAAA,KAAK,EAAE,EAD+B;AAEtCC,EAAAA,UAAU,EAAE,KAF0B;AAGtCC,EAAAA,KAAK,EAAGF,KAAD,IAAW,CAAE,CAHkB;AAItCG,EAAAA,MAAM,EAAE,MAAM,CAAE;AAJsB,CAApB,CAApB;;AAOA,MAAMC,sBAAsB,GAAIC,cAAD,IAAkB;AAC/C,QAAMC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAApB;AACA,QAAMC,iBAAiB,GAAG,IAAIF,IAAJ,CAASF,cAAT,EAAyBG,OAAzB,EAA1B;AAEA,QAAME,iBAAiB,GAAGD,iBAAiB,GAAGH,WAA9C;AACA,SAAOK,KAAP;AACD,CAND;;AAQA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC5C,QAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAArB;AACA,QAAM,CAAChB,KAAD,EAAQiB,QAAR,IAAoBpB,QAAQ,CAACiB,YAAD,CAAlC;AAEA,QAAMI,cAAc,GAAG,CAAC,CAAClB,KAAzB;;AAEA,QAAMmB,YAAY,GAAG,CAACnB,KAAD,EAAQK,cAAR,KAA2B;AAC9CY,IAAAA,QAAQ,CAACjB,KAAD,CAAR;AACAe,IAAAA,YAAY,CAACK,OAAb,CAAqB,OAArB,EAA8BpB,KAA9B;AACD,GAHD;;AAKA,QAAMqB,aAAa,GAAG,MAAM;AAC1BJ,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,IAAAA,YAAY,CAACO,UAAb,CAAwB,OAAxB,EAAiCtB,KAAjC;AACD,GAHD;;AAKA,QAAMuB,YAAY,GAAG;AACnBvB,IAAAA,KAAK,EAAEA,KADY;AAEnBC,IAAAA,UAAU,EAAEiB,cAFO;AAGnBhB,IAAAA,KAAK,EAAEiB,YAHY;AAInBhB,IAAAA,MAAM,EAAEkB;AAJW,GAArB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,YAA7B;AAAA,cACGV,KAAK,CAACW;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA5BM;;GAAMZ,mB;;KAAAA,mB;AA8Bb,eAAed,WAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst AuthContext = React.createContext({\n  token: '',\n  isLoggedIn: false,\n  login: (token) => {},\n  logout: () => {},\n});\n\nconst calculateRemainingTime = (expirationTime)=>{\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n\n  const remainingDuration = adjExpirationTime - currentTime;\n  return remai\n}\n\nexport const AuthContextProvider = (props) => {\n  const initialToken = localStorage.getItem('token')\n  const [token, setToken] = useState(initialToken);\n\n  const userIsLoggedIn = !!token;\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem('token', token);\n  };\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem('token', token);\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}