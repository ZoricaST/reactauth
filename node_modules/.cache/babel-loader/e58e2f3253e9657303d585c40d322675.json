{"ast":null,"code":"import _slicedToArray from\"/home/zorica/\\u0420\\u0430\\u0434\\u043D\\u0430 \\u043F\\u043E\\u0432\\u0440\\u0448\\u0438\\u043D\\u0430/react/React - The Complete Guide (incl Hooks, React Router, Redux)/[TutsNode.com] - React - The Complete Guide (incl Hooks, React Router, Redux)/22 Adding Authentication To React Apps/01-starting-project/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useRef,useContext}from'react';import{useHistory}from'react-router-dom/cjs/react-router-dom.min';import AuthContext from'../../store/auth-context';import classes from'./AuthForm.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AuthForm=function AuthForm(){var history=useHistory();var emailInputRef=useRef();var passwordInputRef=useRef();var authCtx=useContext(AuthContext);var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isLogin=_useState2[0],setIsLogin=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var switchAuthModeHandler=function switchAuthModeHandler(){setIsLogin(function(prevState){return!prevState;});};var submitHandler=function submitHandler(event){event.preventDefault();var enteredEmail=emailInputRef.current.value;var enteredPassword=passwordInputRef.current.value;// optional: Add validation\nsetIsLoading(true);var url;if(isLogin){url='https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBOY-Y4RykiUKME-IVBLrDGGcel9VUpch8';}else{url='https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBOY-Y4RykiUKME-IVBLrDGGcel9VUpch8';}fetch(url,{method:'POST',body:JSON.stringify({email:enteredEmail,password:enteredPassword,returnSecureToken:true}),headers:{'Content-Type':'application/json'}}).then(function(res){setIsLoading(false);if(res.ok){return res.json();}else{return res.json().then(function(data){var errorMessage='Authentication failed!';// if (data && data.error && data.error.message) {\n// errorMessage = data.error.message;\n// }\nthrow new Error(errorMessage);});}}).then(function(data){authCtx.login(data.idToken);history.replace('/');}).catch(function(err){alert(err.message);});};return/*#__PURE__*/_jsxs(\"section\",{className:classes.auth,children:[/*#__PURE__*/_jsx(\"h1\",{children:isLogin?'Login':'Sign Up'}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.control,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Your Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",required:true,ref:emailInputRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.control,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Your Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",required:true,ref:passwordInputRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.actions,children:[!isLoading&&/*#__PURE__*/_jsx(\"button\",{children:isLogin?'Login':'Create Account'}),isLoading&&/*#__PURE__*/_jsx(\"p\",{children:\"Sending request...\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:classes.toggle,onClick:switchAuthModeHandler,children:isLogin?'Create new account':'Login with existing account'})]})]})]});};export default AuthForm;","map":{"version":3,"sources":["/home/zorica/Радна површина/react/React - The Complete Guide (incl Hooks, React Router, Redux)/[TutsNode.com] - React - The Complete Guide (incl Hooks, React Router, Redux)/22 Adding Authentication To React Apps/01-starting-project/src/components/Auth/AuthForm.js"],"names":["useState","useRef","useContext","useHistory","AuthContext","classes","AuthForm","history","emailInputRef","passwordInputRef","authCtx","isLogin","setIsLogin","isLoading","setIsLoading","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","url","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","Error","login","idToken","replace","catch","err","alert","message","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\n\nimport AuthContext from '../../store/auth-context';\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\nconst history = useHistory();\nconst emailInputRef = useRef();\nconst passwordInputRef = useRef();\n\nconst authCtx = useContext(AuthContext);\n\nconst [isLogin, setIsLogin] = useState(true);\nconst [isLoading, setIsLoading] = useState(false);\n\nconst switchAuthModeHandler = () => {\nsetIsLogin((prevState) => !prevState);\n};\n\nconst submitHandler = (event) => {\nevent.preventDefault();\n\nconst enteredEmail = emailInputRef.current.value;\nconst enteredPassword = passwordInputRef.current.value;\n\n// optional: Add validation\n\nsetIsLoading(true);\nlet url;\nif (isLogin) {\nurl =\n'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBOY-Y4RykiUKME-IVBLrDGGcel9VUpch8';\n} else {\nurl =\n'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBOY-Y4RykiUKME-IVBLrDGGcel9VUpch8';\n}\nfetch(url, {\nmethod: 'POST',\nbody: JSON.stringify({\nemail: enteredEmail,\npassword: enteredPassword,\nreturnSecureToken: true,\n}),\nheaders: {\n'Content-Type': 'application/json',\n},\n})\n.then((res) => {\nsetIsLoading(false);\nif (res.ok) {\nreturn res.json();\n} else {\nreturn res.json().then((data) => {\nlet errorMessage = 'Authentication failed!';\n// if (data && data.error && data.error.message) {\n// errorMessage = data.error.message;\n// }\n\nthrow new Error(errorMessage);\n});\n}\n})\n.then((data) => {\nauthCtx.login(data.idToken);\nhistory.replace('/');\n})\n.catch((err) => {\nalert(err.message);\n});\n};\n\nreturn (\n<section className={classes.auth}>\n<h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n<form onSubmit={submitHandler}>\n<div className={classes.control}>\n<label htmlFor='email'>Your Email</label>\n<input type='email' id='email' required ref={emailInputRef} />\n</div>\n<div className={classes.control}>\n<label htmlFor='password'>Your Password</label>\n<input\ntype='password'\nid='password'\nrequired\nref={passwordInputRef}\n/>\n</div>\n<div className={classes.actions}>\n{!isLoading && (\n<button>{isLogin ? 'Login' : 'Create Account'}</button>\n)}\n{isLoading && <p>Sending request...</p>}\n<button\ntype='button'\nclassName={classes.toggle}\nonClick={switchAuthModeHandler}\n>\n{isLogin ? 'Create new account' : 'Login with existing account'}\n</button>\n</div>\n</form>\n</section>\n);\n};\n\nexport default AuthForm;"]},"metadata":{},"sourceType":"module"}